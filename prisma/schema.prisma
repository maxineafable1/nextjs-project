// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Song {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  lyrics      String
  image       String
  song        String
  genre       String
  artist      User       @relation(fields: [artistId], references: [id])
  artistId    String     @db.ObjectId
  playlists   Playlist[] @relation(fields: [playlistIds], references: [id])
  playlistIds String[]   @db.ObjectId
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String     @unique
  name     String?
  password String
  image    String?
  Song     Song[]
  Playlist Playlist[]
  Library  Library?
}

model Playlist {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  image      String?
  user       User      @relation(fields: [userId], references: [id])
  userId     String    @db.ObjectId
  songs      Song[]    @relation(fields: [songIds], references: [id])
  songIds    String[]  @db.ObjectId
  category   String
  libraries  Library[] @relation(fields: [libraryIds], references: [id])
  libraryIds String[]  @db.ObjectId
}

model Library {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  user        User       @relation(fields: [userId], references: [id])
  userId      String     @unique @db.ObjectId
  playlists   Playlist[] @relation(fields: [playlistIds], references: [id])
  playlistIds String[]   @db.ObjectId
}
